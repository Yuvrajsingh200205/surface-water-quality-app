{"ast":null,"code":"import React from'react';// DataTable component: Renders the fetched data in a table\n// Dynamically generates columns based on the first data item's keys\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DataTable(_ref){let{data}=_ref;if(data.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No data available.\"});}// Get column names from the first record's keys (assuming all records have same structure)\nconst columns=Object.keys(data[0]);return/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"th\",{children:col.replace(/_/g,' ').toUpperCase()},col)// Format column names nicely\n)})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map((item,index)=>/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"td\",{children:item[col]!==undefined?item[col]:'N/A'},col)// Handle missing values\n)},index))})]});}export default DataTable;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","DataTable","_ref","data","length","children","columns","Object","keys","map","col","replace","toUpperCase","item","index","undefined"],"sources":["/Users/yuvrajsingh/Downloads/Developer/yashhhh/surface-water-quality-app/src/components/DataTable.js"],"sourcesContent":["import React from 'react';\n\n// DataTable component: Renders the fetched data in a table\n// Dynamically generates columns based on the first data item's keys\nfunction DataTable({ data }) {\n  if (data.length === 0) {\n    return <p>No data available.</p>;\n  }\n\n  // Get column names from the first record's keys (assuming all records have same structure)\n  const columns = Object.keys(data[0]);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {columns.map((col) => (\n            <th key={col}>{col.replace(/_/g, ' ').toUpperCase()}</th> // Format column names nicely\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={index}>\n            {columns.map((col) => (\n              <td key={col}>{item[col] !== undefined ? item[col] : 'N/A'}</td> // Handle missing values\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default DataTable;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAW,IAAV,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACzB,GAAIC,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,CACrB,mBAAON,IAAA,MAAAO,QAAA,CAAG,oBAAkB,CAAG,CAAC,CAClC,CAEA;AACA,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC,CAEpC,mBACEH,KAAA,UAAAK,QAAA,eACEP,IAAA,UAAAO,QAAA,cACEP,IAAA,OAAAO,QAAA,CACGC,OAAO,CAACG,GAAG,CAAEC,GAAG,eACfZ,IAAA,OAAAO,QAAA,CAAeK,GAAG,CAACC,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,EAA1CF,GAA+C,CAAE;AAC3D,CAAC,CACA,CAAC,CACA,CAAC,cACRZ,IAAA,UAAAO,QAAA,CACGF,IAAI,CAACM,GAAG,CAAC,CAACI,IAAI,CAAEC,KAAK,gBACpBhB,IAAA,OAAAO,QAAA,CACGC,OAAO,CAACG,GAAG,CAAEC,GAAG,eACfZ,IAAA,OAAAO,QAAA,CAAeQ,IAAI,CAACH,GAAG,CAAC,GAAKK,SAAS,CAAGF,IAAI,CAACH,GAAG,CAAC,CAAG,KAAK,EAAjDA,GAAsD,CAAE;AAClE,CAAC,EAHKI,KAIL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CAEZ,CAEA,cAAe,CAAAb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}