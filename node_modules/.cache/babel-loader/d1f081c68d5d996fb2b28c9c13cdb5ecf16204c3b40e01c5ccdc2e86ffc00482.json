{"ast":null,"code":"var _jsxFileName = \"/Users/yuvrajsingh/Downloads/Developer/yashhhh/surface-water-quality-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport DataTable from './components/DataTable';\nimport Footer from './components/Footer';\n\n// Main App component: Fetches data from API and manages state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]); // State to hold fetched data\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const [searchTerm, setSearchTerm] = useState(''); // Search term for filtering\n\n  // API endpoint with new key and parameters\n  const API_URL = '/api/resource/19697d76-442e-4d76-aeae-13f8a17c91e1?api-key=579b464db66ec23bdd00000150ce6d3e24a94d895052b46f3eca3bda&format=json&limit=100';\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetch(API_URL).then(response => {\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.status} - ${response.statusText}`);\n      }\n      return response.json();\n    }).then(json => {\n      console.log('API Response:', json); // Log the full response for debugging\n      // Handle different possible response structures\n      if (json.records && Array.isArray(json.records)) {\n        setData(json.records);\n      } else if (json.data && Array.isArray(json.data)) {\n        setData(json.data);\n      } else if (Array.isArray(json)) {\n        setData(json);\n      } else {\n        setData([]);\n        console.warn('No recognizable data structure found in API response:', json);\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error fetching data:', err); // Log the error for debugging\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []); // Empty dependency array: run once on mount\n\n  // Filter data based on search term (searches in Station_Name and State)\n  const filteredData = data.filter(item => item.Station_Name && item.Station_Name.toLowerCase().includes(searchTerm.toLowerCase()) || item.State && item.State.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by station or state...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error, \". Please check the console for details or try again later.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), !loading && !error && data.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 53\n      }, this), !loading && !error && data.length > 0 && /*#__PURE__*/_jsxDEV(DataTable, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yCHHeLTW+8FeFxPBNQ5fb5KyhdQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","DataTable","Footer","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","searchTerm","setSearchTerm","API_URL","fetch","then","response","ok","Error","status","statusText","json","console","log","records","Array","isArray","warn","catch","err","message","filteredData","filter","item","Station_Name","toLowerCase","includes","State","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["/Users/yuvrajsingh/Downloads/Developer/yashhhh/surface-water-quality-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport DataTable from './components/DataTable';\nimport Footer from './components/Footer';\n\n// Main App component: Fetches data from API and manages state\nfunction App() {\n  const [data, setData] = useState([]); // State to hold fetched data\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const [searchTerm, setSearchTerm] = useState(''); // Search term for filtering\n\n  // API endpoint with new key and parameters\n  const API_URL = '/api/resource/19697d76-442e-4d76-aeae-13f8a17c91e1?api-key=579b464db66ec23bdd00000150ce6d3e24a94d895052b46f3eca3bda&format=json&limit=100';\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetch(API_URL)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Network response was not ok: ${response.status} - ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then(json => {\n        console.log('API Response:', json); // Log the full response for debugging\n        // Handle different possible response structures\n        if (json.records && Array.isArray(json.records)) {\n          setData(json.records);\n        } else if (json.data && Array.isArray(json.data)) {\n          setData(json.data);\n        } else if (Array.isArray(json)) {\n          setData(json);\n        } else {\n          setData([]);\n          console.warn('No recognizable data structure found in API response:', json);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error fetching data:', err); // Log the error for debugging\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []); // Empty dependency array: run once on mount\n\n  // Filter data based on search term (searches in Station_Name and State)\n  const filteredData = data.filter(item =>\n    (item.Station_Name && item.Station_Name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n    (item.State && item.State.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by station or state...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        {loading && <p>Loading data...</p>}\n        {error && <p>Error: {error}. Please check the console for details or try again later.</p>}\n        {!loading && !error && data.length === 0 && <p>No data available.</p>}\n        {!loading && !error && data.length > 0 && <DataTable data={filteredData} />}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}